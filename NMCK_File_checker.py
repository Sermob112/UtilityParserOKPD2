import os
import re
# Путь к основной директории
base_path = r"F:\44 - Закупки 12.07.25"
mass  = ["0352100012725000033", "0352100012725000035", "0301300247625000589", "0357300040425000001", "0869200000225006221", "0318300165725000399", "0301100000425000048", 
         "0174500001125003857", "0358200011325000018", "0369100038425000060", "0190200000325008370", "0834500000125000010", "0324100004425000103", "0372200141825000044", 
         "0320100018725000190", "0369300199325000012", "0362300376325000008", "0318200067725000001", "0387200011125000021", "0145200000425001096", "0111200000125000014", 
         "0817600001225000002", "0131200001025005185", "0301300247625000533", "0321100017225000063", "0307300005225000356", "0123300004625000081", "0119300000125000240", 
         "0356300207625000004", "0151100008425000025", "0335300053925000042", "0131200001025005012", "0848300057125000063", "0138200003725000024", "0301100000425000045", 
         "0339300289625000030", "0112200000825003180", "0190200000325007779", "0372200141825000040", "0372200141825000038", "0372200141825000039", "0372200141825000042", 
         "0351300298325000146", "0169300028125000166", "0372200271025000061", "0372200141825000036", "0372200271025000062", "0372500009325000025", "0119200000125011763", 
         "0815500000525008196", "0372200078925000054", "0123300004625000078", "0142300006225000081", "0372200084225000024", "0162300005325001153", "0372200084225000023", 
         "0372500009325000020", "0122300013825000047", "0119200000125011262", "0348200077025000023", "0375400000925000049", "0387200011125000020", "0166300024725000424", 
         "0318300165725000286", "0306100005925000013", "0372200084225000018", "0372100027325000224", "0333200014025000033", "0131200001025004235", "0838200000225000010", 
         "0163600007425000012", "0372500009325000018", "0818500000825003851", "0816500000625009084", "0816500000625009115", "0190300000725000419", "0387200015025000012", 
         "0332100025625000014", "0151100008425000024", "0123200000325001105", "0120100008425000038", "0120100008425000039", "0338100004625000034", "0319300008025000007", 
         "0184200000625000685", "0152300044225000021", "0375400000925000042", "0122300013825000042", "0142300006225000072", "0137200001225003242", "0818300019925000161", 
         "0320100018325000009", "0145200000425000756", "0372200141825000026", "0346300130525000009", "0372200141825000025", "0187300006525000777", "0332100025625000013", 
         "0372100054625000371", "0373400009625000150", "0346300130525000007", "0346300130525000006", "0346300130525000008", "0319300325525000249", "0356500001425004169", 
         "0335100016125000118", "0334100004725000002", "0107300010225000041", "0173100005025000013", "0351300298325000110", "0329400001725000037", "0372200141825000023", 
         "0119200000125009364", "0164300016525000428", "0372200141825000020", "0372100027325000135", "0333400000325000026", "0190200000325006095", "0151100008425000019", 
         "0123300004625000062", "0372200084225000012", "0375400000925000037", "0142300006225000066", "0348200085625000008", "0372100054625000335", "0845500001025000042", 
         "0112200000825002420", "0153100006325000026", "0387200010725000002", "0187300006525000647", "0372200236125000037", "0136500001125002947", "0145200000425000608", 
         "0354200017425000003", "0848300058125000126", "0329100005925000090", "0169300008225000266", "0372200236125000031", "0320100003925000004", "0375100001225000253", 
         "0373400009625000118", "0348200077025000010", "0372500009325000008", "0335100016125000092", "0372500009325000010", "0329200062225003939", "0123200000325000861", 
         "0329200062225003889", "0348200077025000009", "0322100014325000007", "0351400002125000056", "0301300247625000338", "0332200039325000001", "0338100004825000016", 
         "0118300013325000668", "0173100005025000009", "0818500000825002876", "0387200011125000011", "0112200000825002195", "0358200011325000008", "0358200011325000007", 
         "0358200011325000006", "0848300047225000349", "0372100054725000035", "0356500001425003294", "0330300051225000044", "0145200000425000439", "0318200048525000017", 
         "0338100004825000014", "0354200017425000001", "0342300194425000014", "0166300024725000297", "0859200001125004111", "0372100054325000019", "0140300024825000010", 
         "0348100026525000110", "0358200005425000001", "0348100008825000022", "0372100053425000004", "0319100001325000037", "0131200001025002707", "0869200000225003335", 
         "0372100027325000084", "0136500001125002285", "0119200000125006292", "0818500000825002462", "0301200077625000032", "0342400001725000002", "0319300325525000165", 
         "0187500000425000065", "0860200000825002601", "0358200011325000005", "0134300044425000014", "0187500000425000064", "0342300194425000013", "0375200056725000018", 
         "0373400006725000044", "0816600003725000019", "0163200000325001831", "0130300016825000003", "0131200001025002520", "0372200141825000012", "0131200001025002492", 
         "0815500000525004542", "0888500000225000136", "0860200000825002413", "0372200045925000005", "0130600040525000061", "0348200080425000058", "0849400000225000067", 
         "0187300006525000385", "0358100009325000006", "0373400009625000057", "0372200243825000007", "0130600040525000046", "0320100011225000138", "0153300007625000035", 
         "0318300119425000468", "0112200000825001574", "0325100011425000005", "0848300049025000250", "0358100002225000040", "0360300052825000349", "0346300130525000005", 
         "0358200054225000004", "0358200054225000005", "0301200077625000030", "0372100006525000003", "0358200046825000017", "0361300021425000007", "0325100002425000004", 
         "0372200141825000011", "0325100002425000006", "0171200001925000877", "0373100089325000018", "0358200054225000003", "0301100021425000011", "0372100027325000037", 
         "0815500000525003398", "0818500000825001773", "0387200021325000007", "0348100011225000015", "0108500000425001065", "0320100011025000021", "0865200000325000224", 
         "0306100001225000004", "0346300130525000004", "0318200030225000002", "0171200001925000722", "0346300130525000003", "0373400006725000026", "0318200030225000001", 
         "0891200000625002178", "0108500000425000970", "0860200000825001495", "0848600002725000108", "0162300015625000001", "0848600002725000109", "0848600002725000101", 
         "0163300029425000230", "0848600002725000100", "0137200001225001431", "0849400000225000048", "0358300445725000011", "0108500000425000888", "0849400000225000042", 
         "0364300108425000011", "0339300289625000009", "0339300289625000010", "0358200054425000004", "0318100060325000004", "0860200000825001084", "0169300000325000410", 
         "0319300325525000115", "0860200000825001048", "0342300062525000001", "0169300000325000385", "0373100089325000006", "0358200054225000002", "0373400009625000015", 
         "0358200054425000003", "0358200020425000005", "0319100038625000015", "0358300445725000010", "0832200006625000139", "0358200054225000001", "0816500000625002427", 
         "0346300130525000002", "0353300009925000013", "0860200000825000640", "0358200020425000001", "0375400000925000014", "0112200000825000736", "0190200000325001423", 
         "0380400000225000018", "0346300130525000001", "0358200054425000002", "0301200077625000010", "0319300325525000089", "0358200011325000003", "0358200054425000001", 
         "0358200011325000002", "0124200000625000279", "0324400000825000003", "0162300009425000008", "0333400000325000005", "0322400004025000005", "0860200000825000126", 
         "0324100004125000001", "0319300003425000027", "0372200271025000007", "0108500000425000045", "0832200006625000006", "0380400000225000003"]

nums = ["№32515021943",
"№32515021591",
"№32515017908",
"№32515010219",
"№32514992746",
"№32514992951",
"№32514992831",
"№32514997315",
"№32514995372",
"№32514995283",
"№32514993631",
"№32514987590",
"№32514989867",
"№32514981080",
"№32514976385",
"№32514972373",
"№32514971482",
"№32514970955",
"№32514973709",
"№32514967809",
"№32514968173",
"№32514968387",
"№32514966013",
"№32514960254",
"№32514953432",
"№32514956460",
"№32514947435",
"№32514944806",
"№32514938052",
"№32514933967",
"№32514932309",
"№32514924280",
"№32514926274",
"№32514925327",
"№32514922637",
"№32514918339",
"№32514914675",
"№32514914236",
"№32514906548",
"№32514901966",
"№32514899247",
"№32514899001",
"№32514893199",
"№32514893454",
"№32514895141",
"№32514885078",
"№32514886723",
"№32514886063",
"№32514880183",
"№32514878313",
"№32514875974",
"№32514877772",
"№32514875203",
"№32514878614",
"№32514873316",
"№32514868440",
"№32514864874",
"№32514861980",
"№32514853166",
"№32514854595",
"№32514847797",
"№32514835708",
"№32514833967",
"№32514832689",
"№32514832287",
"№32514830536",
"№32514827135",
"№32514825767",
"№32514827162",
"№32514826755",
"№32514819963",
"№32514821565",
"№32514815505",
"№32514811486",
"№32514811227",
"№32514804863",
"№32514807560",
"№32514799319",
"№32514801655",
"№32514788226",
"№32514781596",
"№32514784357",
"№32514782781",
"№32514774803",
"№32514764466",
"№32514762023",
"№32514760195",
"№32514761106",
"№32514759295",
"№32514759294",
"№32514742577",
"№32514739889",
"№32514735978",
"№32514729585",
"№32514728600",
"№32514728211",
"№32514718114",
"№32514718105",
"№32514708660",
"№32514705966",
"№32514707712",
"№32514695159",
"№32514696747",
"№32514694822",
"№32514694816",
"№32514691405",
"№32514693962",
"№32514673563",
"№32514682808",
"№32514666637",
"№32514662703",
"№32514660361",
"№32514657539",
"№32514651995",
"№32514652443",
"№32514645215",
"№32514641901",
"№32514644695",
"№32514643896",
"№32514635550",
"№32514628963",
"№32514619908",
"№32514619310",
"№32514618713",
"№32514614530",
"№32514614114",
"№32514618182",
"№32514614361",
"№32514605150",
"№32514604236",
"№32514591663",
"№32514587487",
"№32514585257",
"№32514588707",
"№32514576304",
"№32514567643",
"№32514565758",
"№32514560205",
"№32514559104",
"№32514551447",
"№32514544080",
"№32514538434",
"№32514539667",
"№32514529302",
"№32514523949",
"№32514526402",
"№32514527034",
"№32514522604",
"№32514503454",
"№32514480487",
"№32514471543",
"№32514456881",
"№32514454562",
"№32514449325",
"№32514444847",
"№32514427029",
"№32514421080"]
# Очищаем номера от символа № и лишних пробелов
mass = [num.replace("№", "").strip() for num in nums]

# Шаблоны для поиска в именах файлов
search_patterns = ["НМЦК", "нмцк", "nmck", "обоснование","нмц","цкеп"]

# Регулярное выражение для извлечения номера закупки (учитывает возможные пробелы вокруг №)
purchase_pattern = re.compile(r"Закупка\s*№\s*(\d+)")

# Счётчики
total_purchase_folders = 0
total_matching_files = 0

def analyze_purchases(root_dir, patterns, mass_numbers):
    global total_purchase_folders, total_matching_files
    results = []
    found_numbers = set()
    folders_without_patterns = []
    folders_with_patterns = set()
    
    # Сначала собираем все файлы с паттернами
    for root, dirs, files in os.walk(root_dir):
        for file in files:
            if any(pattern.lower() in file.lower() for pattern in patterns):
                match = purchase_pattern.search(root)
                if match:
                    purchase_number = match.group(1).strip()  # Убираем пробелы
                    results.append((purchase_number, os.path.join(root, file)))
                    folders_with_patterns.add(purchase_number)
                    total_matching_files += 1
    
    # Затем проходим по всем папкам закупок
    for root, dirs, files in os.walk(root_dir):
        folder_name = os.path.basename(root)
        match = purchase_pattern.match(folder_name)
        if match:
            purchase_number = match.group(1).strip()  # Убираем пробелы
            found_numbers.add(purchase_number)
            total_purchase_folders += 1
            
            # Проверяем, есть ли для этой папки файлы с паттернами
            if purchase_number not in folders_with_patterns:
                folders_without_patterns.append((purchase_number, root))
    
    # Находим отсутствующие номера (сравниваем очищенные номера)
    missing_numbers = [num for num in mass_numbers 
                      if num.replace("№", "").strip() not in found_numbers]
    
    return results, missing_numbers, folders_without_patterns

# Выполняем поиск
found_files, missing_numbers, no_pattern_folders = analyze_purchases(base_path, search_patterns, mass)

# Выводим результаты
print(f"Всего папок с форматом 'Закупка № <номер>': {total_purchase_folders}")
print(f"Всего найдено файлов с 'НМЦК'/'nmck': {total_matching_files}")

if found_files:
    print("\nСписок найденных файлов (первые 10 для примера):")
    for purchase_num, file_path in found_files:
        print(f"Закупка № {purchase_num} — файл: {os.path.basename(file_path)}")

else:
    print("\nФайлы с указанными шаблонами не найдены.")

# Выводим отсутствующие номера (в исходном формате)
if missing_numbers:
    print("\nНомера из массива, которые отсутствуют в названиях папок:")
    for num in nums:
        cleaned_num = num.replace("№", "").strip()
        if cleaned_num in [n.replace("№", "").strip() for n in missing_numbers]:
            print(num)
else:
    print("\nВсе номера из массива присутствуют в названиях папок.")

# Выводим папки без файлов с паттернами
if no_pattern_folders:
    print(f"\nПапки без файлов с паттернами (всего {len(no_pattern_folders)} из {total_purchase_folders}):")
    for purchase_num, folder_path in no_pattern_folders:
        print(f"Закупка № {purchase_num}")

else:
    print("\nВо всех папках найдены файлы с указанными паттернами.")