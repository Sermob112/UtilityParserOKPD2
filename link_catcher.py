import requests
from bs4 import BeautifulSoup

nums = ["№32515021943",
"№32515021591",
"№32515017908",
"№32515010219",
"№32514992746",
"№32514992951",
"№32514992831",
"№32514997315",
"№32514995372",
"№32514995283",
"№32514993631",
"№32514987590",
"№32514989867",
"№32514981080",
"№32514976385",
"№32514972373",
"№32514971482",
"№32514970955",
"№32514973709",
"№32514967809",
"№32514968173",
"№32514968387",
"№32514966013",
"№32514960254",
"№32514953432",
"№32514956460",
"№32514947435",
"№32514944806",
"№32514938052",
"№32514933967",
"№32514932309",
"№32514924280",
"№32514926274",
"№32514925327",
"№32514922637",
"№32514918339",
"№32514914675",
"№32514914236",
"№32514906548",
"№32514901966",
"№32514899247",
"№32514899001",
"№32514893199",
"№32514893454",
"№32514895141",
"№32514885078",
"№32514886723",
"№32514886063",
"№32514880183",
"№32514878313",
"№32514875974",
"№32514877772",
"№32514875203",
"№32514878614",
"№32514873316",
"№32514868440",
"№32514864874",
"№32514861980",
"№32514853166",
"№32514854595",
"№32514847797",
"№32514835708",
"№32514833967",
"№32514832689",
"№32514832287",
"№32514830536",
"№32514827135",
"№32514825767",
"№32514827162",
"№32514826755",
"№32514819963",
"№32514821565",
"№32514815505",
"№32514811486",
"№32514811227",
"№32514804863",
"№32514807560",
"№32514799319",
"№32514801655",
"№32514788226",
"№32514781596",
"№32514784357",
"№32514782781",
"№32514774803",
"№32514764466",
"№32514762023",
"№32514760195",
"№32514761106",
"№32514759295",
"№32514759294",
"№32514742577",
"№32514739889",
"№32514735978",
"№32514729585",
"№32514728600",
"№32514728211",
"№32514718114",
"№32514718105",
"№32514708660",
"№32514705966",
"№32514707712",
"№32514695159",
"№32514696747",
"№32514694822",
"№32514694816",
"№32514691405",
"№32514693962",
"№32514673563",
"№32514682808",
"№32514666637",
"№32514662703",
"№32514660361",
"№32514657539",
"№32514651995",
"№32514652443",
"№32514645215",
"№32514641901",
"№32514644695",
"№32514643896",
"№32514635550",
"№32514628963",
"№32514619908",
"№32514619310",
"№32514618713",
"№32514614530",
"№32514614114",
"№32514618182",
"№32514614361",
"№32514605150",
"№32514604236",
"№32514591663",
"№32514587487",
"№32514585257",
"№32514588707",
"№32514576304",
"№32514567643",
"№32514565758",
"№32514560205",
"№32514559104",
"№32514551447",
"№32514544080",
"№32514538434",
"№32514539667",
"№32514529302",
"№32514523949",
"№32514526402",
"№32514527034",
"№32514522604",
"№32514503454",
"№32514480487",
"№32514471543",
"№32514456881",
"№32514454562",
"№32514449325",
"№32514444847",
"№32514427029",
"№32514421080"]



# Удалим "№" из номеров
numbers_cleaned = [n.replace("№", "") for n in nums]

# Заголовки — имитируем браузер
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36"
}

result_links = []

for num in numbers_cleaned:
    url = f"https://zakupki.gov.ru/epz/order/extendedsearch/results.html?searchString={num}"
    response = requests.get(url, headers=headers)
    if response.status_code != 200:
        print(f"Ошибка запроса для {num}: {response.status_code}")
        continue

    soup = BeautifulSoup(response.text, "html.parser")

    for a in soup.find_all("a", href=True):
        href = a["href"]
        if (
            "/epz/order/notice/notice223/common-info.html" in href and
            a.find("span", class_="highlightColor") and
            a.find("span", class_="highlightColor").text.strip() == num
        ):
            full_link = f"https://zakupki.gov.ru{href}"
            result_links.append(f'"{full_link}"')
            break
    else:
        print(f"Ссылка не найдена для номера: {num}")

# Выводим результат
print(", ".join(result_links))